version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: invited-plus-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/prod.db
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - BACKEND_PORT=3001
      - CORS_ORIGIN=https://invited-plus.vercel.app
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FROM_EMAIL=${FROM_EMAIL:-noreply@invitedplus.com}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - APP_URL=https://invited-plus.vercel.app
      - API_URL=https://invitedplus-production.up.railway.app
    volumes:
      - backend_data:/app/data
      - backend_uploads:/app/uploads
    networks:
      - invited-plus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: invited-plus-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://invitedplus-production.up.railway.app/api
      - NEXT_PUBLIC_WS_URL=https://invitedplus-production.up.railway.app
    depends_on:
      - backend
    networks:
      - invited-plus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # NGINX Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: invited-plus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - invited-plus-network
    restart: unless-stopped

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: invited-plus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - invited-plus-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  backend_data:
    driver: local
  backend_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  invited-plus-network:
    driver: bridge
